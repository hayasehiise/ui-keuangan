/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteRouteImport } from './routes/login/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProdukIndexRouteImport } from './routes/produk/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'

const LoginRouteRoute = LoginRouteRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProdukIndexRoute = ProdukIndexRouteImport.update({
  id: '/produk/',
  path: '/produk/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LoginRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRouteRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/produk': typeof ProdukIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/produk': typeof ProdukIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRouteRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/produk/': typeof ProdukIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/login/' | '/produk'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/produk'
  id: '__root__' | '/' | '/login' | '/login/' | '/produk/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRouteRoute: typeof LoginRouteRouteWithChildren
  ProdukIndexRoute: typeof ProdukIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/produk/': {
      id: '/produk/'
      path: '/produk'
      fullPath: '/produk'
      preLoaderRoute: typeof ProdukIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/'
      fullPath: '/login/'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof LoginRouteRoute
    }
  }
}

interface LoginRouteRouteChildren {
  LoginIndexRoute: typeof LoginIndexRoute
}

const LoginRouteRouteChildren: LoginRouteRouteChildren = {
  LoginIndexRoute: LoginIndexRoute,
}

const LoginRouteRouteWithChildren = LoginRouteRoute._addFileChildren(
  LoginRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRouteRoute: LoginRouteRouteWithChildren,
  ProdukIndexRoute: ProdukIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
